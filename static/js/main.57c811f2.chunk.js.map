{"version":3,"sources":["components/smart-components/Header/Header.module.scss","components/smart-components/Experience/Experience.module.scss","components/dumb-components/MediaCard/MediaCard.module.scss","components/dumb-components/Badge/Badge.module.scss","components/dumb-components/ContentRow/ContentRow.module.scss","components/smart-components/Contacts/Contacts.module.scss","App.module.scss","definitions/data.interfaces.ts","assets/data/static.ts","assets/data/profile.ts","AppContext.ts","components/dumb-components/MediaCard/MediaCard.tsx","components/dumb-components/ContentRow/ContentRow.tsx","components/dumb-components/Badge/Badge.tsx","components/smart-components/Experience/Experience.tsx","components/smart-components/Header/Header.tsx","components/smart-components/Skills/Skills.tsx","components/smart-components/Contacts/Contacts.tsx","assets/data/profile.ru.ts","assets/data/static.ru.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","LANGUAGE","SkillCategory","SKILLS_SET","name","skillCategory","FRONTEND","BACKEND","PERSONAL_DATA","person","firstName","lastName","jobTitle","email","phone","github","linkedin","experience","company","companyIcon","url","industry","description","location","technologies","projects","skills","labels","contactsLabels","sectionLabels","contacts","experienceLabels","companySite","techStack","DEFAULT_APP_CONTEXT","personalData","lang","EN","AppContext","React","createContext","MediaCard","type","className","bgUrl","useMemo","styles","mediaCard","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ContentRow","rowTitle","rowContent","contentRow","Badge","children","badge","Experience","useState","selectedId","setSelectedId","SwitchButton","memo","index","handleClick","item","card","active","onClick","data-index","e","preventDefault","Number","currentTarget","getAttribute","Consumer","experienceSection","verticalStepper","map","key","href","Header","changeLang","languages","Object","values","currLanguage","language","data-lang","header","headerWrapper","headerTitle","langSwitcher","src","alt","title","Skills","Contacts","contactsSection","PERSONAL_DATA_RU","App","setLang","Provider","value","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57c811f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3qlQj\",\"headerWrapper\":\"Header_headerWrapper__1dO-P\",\"headerTitle\":\"Header_headerTitle__11xJW\",\"langSwitcher\":\"Header_langSwitcher__3xmf9\",\"active\":\"Header_active__3u2sv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"verticalStepper\":\"Experience_verticalStepper__OBk3o\",\"card\":\"Experience_card__4PJp3\",\"active\":\"Experience_active__2UJEg\",\"experienceSection\":\"Experience_experienceSection__2nv7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mediaCard\":\"MediaCard_mediaCard__2jF7p\",\"positive\":\"MediaCard_positive__17QpO\",\"negative\":\"MediaCard_negative__1l6CW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"Badge_badge__2QfYo\",\"positive\":\"Badge_positive__1lJTZ\",\"negative\":\"Badge_negative__2aq5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentRow\":\"ContentRow_contentRow__2rReb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsSection\":\"Contacts_contactsSection__Mb5Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","export enum LANGUAGE {\n  RU = 'ru',\n  EN = 'en',\n}\n\nexport type ElementType = 'positive' | 'negative';\n\nexport enum SkillCategory {\n  FRONTEND = 'frontend',\n  BACKEND = 'backend',\n  DEVELOPMENT = 'development',\n  OTHERS = 'others',\n}\n\nexport interface Experience {\n  company: string;\n  companyIcon: string;\n  url?: string;\n  industry: string;\n  jobTitle: string;\n  description: string;\n  location: string;\n  technologies: Skill[];\n}\n\nexport interface Project {\n  name: string;\n  projectIcon?: string;\n  description: string;\n  url: string;\n  technologies: Skill[];\n}\n\nexport interface Skill {\n  name: string;\n  skillCategory: SkillCategory;\n}\n\nexport interface Label {\n  contactsLabels: {\n    email: string;\n    phone: string;\n    github: string;\n    linkedin: string;\n  };\n  sectionLabels: {\n    contacts: string;\n    experience: string;\n    projects: string;\n    skills: string;\n  };\n  experienceLabels: {\n    company: string;\n    companySite: string;\n    location: string;\n    industry: string;\n    description: string;\n    techStack: string;\n  };\n}\n\nexport interface PersonData {\n  person: {\n    firstName: string;\n    lastName: string;\n    jobTitle: string;\n    email: string;\n    phone: string;\n    github: string;\n    linkedin: string;\n  };\n  experience: Experience[];\n  projects: Project[];\n  skills: Skill[];\n  labels: Label;\n}\n","import { Label } from '../../definitions/data.interfaces';\n\nexport const STATIC_DATA: Label = {\n  contactsLabels: {\n    email: 'E-mail',\n    phone: 'Phone',\n    github: 'Github',\n    linkedin: 'LinkedIn',\n  },\n  sectionLabels: {\n    contacts: 'Contacts',\n    experience: 'Experience',\n    projects: 'Projects',\n    skills: 'Skills',\n  },\n  experienceLabels: {\n    company: 'Company',\n    companySite: 'Company site',\n    location: 'Location',\n    industry: 'Industry',\n    description: 'Description',\n    techStack: 'Tech stack',\n  },\n};\n","import { PersonData, Skill, SkillCategory } from '../../definitions/data.interfaces';\nimport { STATIC_DATA } from './static';\n\nexport const SKILLS_SET: Skill[] = [\n  {\n    name: 'JavaScript',\n    skillCategory: SkillCategory.FRONTEND,\n  },\n  {\n    name: 'TypeScript',\n    skillCategory: SkillCategory.FRONTEND,\n  },\n\n  {\n    name: 'Angular/React/Vue/Ember',\n    skillCategory: SkillCategory.FRONTEND,\n  },\n\n  {\n    name: 'JAVA',\n    skillCategory: SkillCategory.BACKEND,\n  },\n\n  {\n    name: 'PHP',\n    skillCategory: SkillCategory.BACKEND,\n  },\n  {\n    name: 'Yii2/Laravel',\n    skillCategory: SkillCategory.BACKEND,\n  },\n];\n\nexport const PERSONAL_DATA: PersonData = {\n  person: {\n    firstName: 'Maksim',\n    lastName: 'Tsvetkov',\n    jobTitle: 'Senor Frontend Engineer',\n    email: 'maxtsvetapple@gmail.com',\n    phone: '+372 5352 9311',\n    github: 'https://github.com/MaxFlower',\n    linkedin: 'https://www.linkedin.com/in/maksim-tsvetkov/',\n  },\n  experience: [\n    {\n      company: 'Avtotor',\n      companyIcon: 'avtotor-logo.png',\n      url: 'http://www.avtotor.ru/',\n      industry: 'Automotive industry',\n      jobTitle: 'Lead software engineer / Chief of department',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Russia, Kaliningrad',\n      technologies: [SKILLS_SET[0], SKILLS_SET[3]],\n    },\n    {\n      company: 'GS Group',\n      companyIcon: 'gsgroup-logo.png',\n      url: 'https://en.gs-group.com/',\n      industry: 'Information technologies',\n      jobTitle: 'Frontend developer',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Russia, Gusev',\n      technologies: [SKILLS_SET[0], SKILLS_SET[1], SKILLS_SET[2]],\n    },\n    {\n      company: 'Kuehne-Nagel',\n      companyIcon: 'kuehne-nagel-logo.png',\n      url: 'https://ee.kuehne-nagel.com/en_gb/',\n      industry: 'Logistics',\n      jobTitle: 'Fullstack developer / Senior Frontend engineer',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Estonia, Tallinn',\n      technologies: [SKILLS_SET[0], SKILLS_SET[3]],\n    },\n    {\n      company: 'Veriff',\n      companyIcon: 'veriff-logo.png',\n      url: 'https://www.veriff.com/',\n      industry: 'Information technologies',\n      jobTitle: 'Senior Frontend engineer',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Estonia, Tallinn',\n      technologies: [SKILLS_SET[0], SKILLS_SET[1], SKILLS_SET[2]],\n    },\n  ],\n  projects: [\n    {\n      name: 'Guru',\n      description:\n        'Company Guru offers professional software that allows automation of any kind of institution. Including cinemas, theatres, concert halls, stadiums, museums, touristic sightseeings and other cultural events/institutions.',\n      url: 'https://guru.ge/',\n      technologies: [SKILLS_SET[0], SKILLS_SET[2]],\n    },\n    {\n      name: 'Extra ETF',\n      description:\n        'Seit über einem Jahrzehnt stehen wir für schnelle und zuverlässige Informationen im Bereich Exchange Traded Funds (ETF).',\n      url: 'https://de.extraetf.com/',\n      technologies: [SKILLS_SET[0], SKILLS_SET[2]],\n    },\n    {\n      name: 'Dozor',\n      description:\n        'TEC electronics has become a leader at the local market and won the trust of many European countries.',\n      url: 'https://dozor.tecel.ru/',\n      technologies: [SKILLS_SET[0], SKILLS_SET[2]],\n    },\n  ],\n  skills: SKILLS_SET,\n  labels: STATIC_DATA,\n};\n","import React from 'react';\nimport { PERSONAL_DATA } from './assets/data/profile';\nimport { LANGUAGE, PersonData } from './definitions/data.interfaces';\n\nexport interface AppContext {\n  personalData: PersonData;\n  lang: LANGUAGE;\n}\n\nexport const DEFAULT_APP_CONTEXT: AppContext = {\n  personalData: PERSONAL_DATA,\n  lang: LANGUAGE.EN,\n};\n\nexport const AppContext = React.createContext(DEFAULT_APP_CONTEXT);\n","import React, { useMemo } from 'react';\nimport { ElementType } from '../../../definitions/data.interfaces';\nimport styles from './MediaCard.module.scss';\n\nexport interface MediaCardProps extends React.HTMLAttributes<HTMLElement> {\n  type?: ElementType;\n  bgUrl?: string;\n}\n\nexport const MediaCard: React.FC<MediaCardProps> = ({ type = 'positive', className = '', bgUrl }: MediaCardProps) => {\n  return useMemo(\n    () => (\n      <div\n        className={`${styles.mediaCard} ${styles[type]} ${className}`}\n        style={{\n          backgroundImage: `url('${bgUrl}')`,\n          backgroundPosition: 'center',\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n        }}\n      />\n    ),\n    [type, className, bgUrl]\n  );\n};\n","import React, { useMemo } from 'react';\nimport styles from './ContentRow.module.scss';\n\nexport interface ContentRowProps extends Pick<React.HTMLAttributes<HTMLElement>, 'id' | 'className'> {\n  rowTitle: React.ReactNode;\n  rowContent: React.ReactNode;\n}\n\nexport const ContentRow: React.FC<ContentRowProps> = ({ rowTitle, rowContent, className = '' }: ContentRowProps) => {\n  return useMemo(\n    () => (\n      <div className={`${styles.contentRow} ${className}`}>\n        <div>{rowTitle}:</div>\n        <div>{rowContent}</div>\n      </div>\n    ),\n    [rowTitle, rowContent, className]\n  );\n};\n","import React, { useMemo } from 'react';\nimport { ElementType } from '../../../definitions/data.interfaces';\nimport styles from './Badge.module.scss';\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLElement> {\n  type?: ElementType;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ type = 'negative', className = '', children }: BadgeProps) => {\n  return useMemo(() => <div className={`${styles.badge} ${styles[type]} ${className}`}>{children}</div>, [\n    type,\n    className,\n    children,\n  ]);\n};\n","import React, { useState } from 'react';\nimport { AppContext } from '../../../AppContext';\nimport { Experience as ExperienceItem } from '../../../definitions/data.interfaces';\nimport { MediaCard } from '../../dumb-components/MediaCard/MediaCard';\nimport { ContentRow } from '../../dumb-components/ContentRow/ContentRow';\nimport { Badge } from '../../dumb-components/Badge/Badge';\nimport styles from './Experience.module.scss';\n\nexport const Experience: React.FC = () => {\n  const [selectedId, setSelectedId] = useState(0);\n\n  const SwitchButton = React.memo<{\n    index: number;\n    handleClick: (e: React.MouseEvent<HTMLElement>) => void;\n    item: ExperienceItem;\n  }>(function SwitchButton({ index, handleClick, item }) {\n    return (\n      <button\n        className={`${styles.card} ${selectedId === index ? styles.active : ''}`}\n        onClick={handleClick}\n        data-index={index}\n      >\n        <MediaCard bgUrl={`/img/${item.companyIcon}`} />\n      </button>\n    );\n  });\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setSelectedId(Number(e.currentTarget.getAttribute('data-index')));\n  };\n\n  return (\n    <AppContext.Consumer>\n      {({ personalData }) => (\n        <div className={styles.experienceSection}>\n          <h3>{personalData.labels.sectionLabels.experience}</h3>\n          <div className={styles.verticalStepper}>\n            {personalData.experience.map((item: ExperienceItem, index) => (\n              <SwitchButton index={index} handleClick={handleClick} item={item} key={item.company} />\n            ))}\n          </div>\n          <section>\n            <h3>{personalData.experience[selectedId].jobTitle}</h3>\n            <div>\n              <ContentRow\n                rowTitle={personalData.labels.experienceLabels.company}\n                rowContent={personalData.experience[selectedId].company}\n              />\n              <ContentRow\n                rowTitle={personalData.labels.experienceLabels.companySite}\n                rowContent={\n                  <a href={personalData.experience[selectedId].url}>{personalData.experience[selectedId].url}</a>\n                }\n              />\n              <ContentRow\n                rowTitle={personalData.labels.experienceLabels.location}\n                rowContent={personalData.experience[selectedId].location}\n              />\n              <ContentRow\n                rowTitle={personalData.labels.experienceLabels.industry}\n                rowContent={personalData.experience[selectedId].industry}\n              />\n              <ContentRow\n                rowTitle={personalData.labels.experienceLabels.description}\n                rowContent={<p>{personalData.experience[selectedId].description}</p>}\n              />\n              <ContentRow\n                rowTitle={personalData.labels.experienceLabels.techStack}\n                rowContent={personalData.experience[selectedId].technologies.map((item) => (\n                  <Badge key={item.name}>{item.name}</Badge>\n                ))}\n              />\n            </div>\n          </section>\n        </div>\n      )}\n    </AppContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { AppContext } from '../../../AppContext';\nimport { LANGUAGE } from '../../../definitions/data.interfaces';\nimport styles from './Header.module.scss';\n\nexport interface HeaderProps {\n  changeLang: (lang: LANGUAGE) => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ changeLang }: HeaderProps) => {\n  const languages = Object.values<string>(LANGUAGE) || [];\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    changeLang((e.currentTarget.getAttribute('data-lang') || '') as LANGUAGE);\n  };\n\n  const SwitchButton = React.memo<{\n    currLanguage: string;\n    language: string;\n    handleClick: (e: React.MouseEvent<HTMLElement>) => void;\n  }>(function SwitchButton({ currLanguage, language, handleClick }) {\n    return (\n      <button\n        className={language === currLanguage ? styles.active : ''}\n        data-lang={language}\n        onClick={handleClick}\n      >\n        {language}\n      </button>\n    );\n  });\n\n  return (\n    <AppContext.Consumer>\n      {({ personalData, lang }) => (\n        <div className={styles.header}>\n          <div className={styles.headerWrapper}>\n            <div className={styles.headerTitle}>\n              <h1>{`${personalData.person.firstName} ${personalData.person.lastName} `}</h1>\n              <small>{personalData.person.jobTitle}</small>\n            </div>\n            <div className={styles.langSwitcher}>\n              <img src={`/img/${lang}.png`} alt={lang} title={lang} />\n              {languages.map((language, index) => (\n                <SwitchButton currLanguage={lang} language={language} handleClick={handleClick} key={index} />\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </AppContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { AppContext } from '../../../AppContext';\nimport { Badge } from '../../dumb-components/Badge/Badge';\n\nexport const Skills: React.FC = () => {\n  return (\n    <AppContext.Consumer>\n      {({ personalData }) => (\n        <div>\n          <h3>{personalData.labels.sectionLabels.skills}</h3>\n          <div>\n            {personalData.skills.map((item) => (\n              <Badge key={item.name}>{item.name}</Badge>\n            ))}\n          </div>\n        </div>\n      )}\n    </AppContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { AppContext } from '../../../AppContext';\nimport { ContentRow } from '../../dumb-components/ContentRow/ContentRow';\nimport styles from './Contacts.module.scss';\n\nexport const Contacts: React.FC = () => {\n  return (\n    <AppContext.Consumer>\n      {({ personalData }) => (\n        <div className={styles.contactsSection}>\n          <h3>{personalData.labels.sectionLabels.contacts}</h3>\n          <section>\n            <ContentRow\n              rowTitle={personalData.labels.contactsLabels.email}\n              rowContent={<a href={`mailto:${personalData.person.email}`}>{personalData.person.email}</a>}\n            />\n            <ContentRow rowTitle={personalData.labels.contactsLabels.phone} rowContent={personalData.person.phone} />\n            <ContentRow\n              rowTitle={personalData.labels.contactsLabels.github}\n              rowContent={<a href={personalData.person.github}>{personalData.person.github}</a>}\n            />\n            <ContentRow\n              rowTitle={personalData.labels.contactsLabels.linkedin}\n              rowContent={<a href={personalData.person.linkedin}>{personalData.person.linkedin}</a>}\n            />\n          </section>\n        </div>\n      )}\n    </AppContext.Consumer>\n  );\n};\n","import { PersonData } from '../../definitions/data.interfaces';\nimport { SKILLS_SET } from './profile';\nimport { STATIC_DATA_RU } from './static.ru';\n\nexport const PERSONAL_DATA_RU: PersonData = {\n  person: {\n    firstName: 'Максим',\n    lastName: 'Цветков',\n    jobTitle: 'Ведущий фронтенд разработчик',\n    email: 'maxtsvetapple@gmail.com',\n    phone: '+372 5352 9311',\n    github: 'https://github.com/MaxFlower',\n    linkedin: 'https://www.linkedin.com/in/maksim-tsvetkov/',\n  },\n  experience: [\n    {\n      company: 'АВТОТОР',\n      companyIcon: 'avtotor-logo.png',\n      url: 'http://www.avtotor.ru/',\n      industry: 'Автомобильное производство',\n      jobTitle: 'Ведущий разработчик / Начальник бюро',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Россия, Калининград',\n      technologies: [SKILLS_SET[0], SKILLS_SET[3]],\n    },\n    {\n      company: 'GS Group',\n      companyIcon: 'gsgroup-logo.png',\n      url: 'https://en.gs-group.com/',\n      industry: 'Информационнные технологии',\n      jobTitle: 'Фронтенд разработчик',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Россия, Гусев',\n      technologies: [SKILLS_SET[0], SKILLS_SET[1], SKILLS_SET[2]],\n    },\n    {\n      company: 'Kuehne-Nagel',\n      companyIcon: 'kuehne-nagel-logo.png',\n      url: 'https://ee.kuehne-nagel.com/en_gb/',\n      industry: 'Логистика',\n      jobTitle: 'Фуллстек разработчик / Ведущий фронтенд разработчик',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Эстония, Таллинн',\n      technologies: [SKILLS_SET[0], SKILLS_SET[3]],\n    },\n    {\n      company: 'Veriff',\n      companyIcon: 'veriff-logo.png',\n      url: 'https://www.veriff.com/',\n      industry: 'Информационнные технологии',\n      jobTitle: 'Ведущий фронтенд разработчик',\n      description:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      location: 'Эстония, Таллинн',\n      technologies: [SKILLS_SET[0], SKILLS_SET[1], SKILLS_SET[2]],\n    },\n  ],\n  projects: [\n    {\n      name: 'Guru',\n      description:\n        'Company Guru offers professional software that allows automation of any kind of institution. Including cinemas, theatres, concert halls, stadiums, museums, touristic sightseeings and other cultural events/institutions.',\n      url: 'https://guru.ge/',\n      technologies: [SKILLS_SET[0], SKILLS_SET[2]],\n    },\n    {\n      name: 'Extra ETF',\n      description:\n        'Seit über einem Jahrzehnt stehen wir für schnelle und zuverlässige Informationen im Bereich Exchange Traded Funds (ETF).',\n      url: 'https://de.extraetf.com/',\n      technologies: [SKILLS_SET[0], SKILLS_SET[2]],\n    },\n    {\n      name: 'Dozor',\n      description:\n        'TEC electronics has become a leader at the local market and won the trust of many European countries.',\n      url: 'https://dozor.tecel.ru/',\n      technologies: [SKILLS_SET[0], SKILLS_SET[2]],\n    },\n  ],\n  skills: SKILLS_SET,\n  labels: STATIC_DATA_RU,\n};\n","import { Label } from '../../definitions/data.interfaces';\n\nexport const STATIC_DATA_RU: Label = {\n  contactsLabels: {\n    email: 'Почта',\n    phone: 'Телефон',\n    github: 'Github',\n    linkedin: 'LinkedIn',\n  },\n  sectionLabels: {\n    contacts: 'Контакты',\n    experience: 'Опыт',\n    projects: 'Проекты',\n    skills: 'Навыки',\n  },\n  experienceLabels: {\n    company: 'Компания',\n    companySite: 'Сайт',\n    location: 'Место',\n    industry: 'Направление',\n    description: 'Описание',\n    techStack: 'Технологии',\n  },\n};\n","import React, { useState } from 'react';\nimport { Contacts, Experience, Header, Projects, Skills } from './components';\nimport { AppContext, DEFAULT_APP_CONTEXT } from './AppContext';\nimport { LANGUAGE } from './definitions/data.interfaces';\nimport { PERSONAL_DATA, PERSONAL_DATA_RU } from './assets/data';\nimport styles from './App.module.scss';\n\nconst App: React.FC = () => {\n  const [lang, setLang] = useState(DEFAULT_APP_CONTEXT.lang);\n\n  return (\n    <AppContext.Provider\n      value={{\n        lang,\n        personalData: lang === LANGUAGE.EN ? PERSONAL_DATA : PERSONAL_DATA_RU,\n      }}\n    >\n      <div className={styles.App}>\n        <Header changeLang={(lang) => setLang(lang)} />\n        <Contacts />\n        <Experience />\n        {false && <Projects />}\n        <Skills />\n      </div>\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}